diff --git a/chrome/browser/ui/views/tabs/tab_drag_controller.cc b/chrome/browser/ui/views/tabs/tab_drag_controller.cc
index 705245efdc1736d54f066719415a84c8783072cf..7b99962b3a1d300e11458965faa8bc7c1b752dd1 100644
--- a/chrome/browser/ui/views/tabs/tab_drag_controller.cc
+++ b/chrome/browser/ui/views/tabs/tab_drag_controller.cc
@@ -491,6 +491,8 @@ void TabDragController::Init(TabDragContext* source_context,
   last_move_screen_loc_ = start_point_in_screen_.x();
   initial_tab_positions_ = source_context->GetTabXCoordinates();
 
+  BRAVE_UI_VIEWS_TABS_TAB_DRAG_CONTROLLER_INIT_LOC_FOR_VERTICAL_TABS
+
   source_context_emptiness_tracker_ =
       std::make_unique<SourceTabStripEmptinessTracker>(
           source_context_->GetTabStripModel(), this);
@@ -1141,6 +1143,7 @@ void TabDragController::MoveAttached(const gfx::Point& point_in_screen,
   // initial position.
   if (just_attached ||
       (abs(point_in_screen.x() - last_move_screen_loc_) > threshold) ||
+      BRAVE_UI_VIEWS_TABS_TAB_DRAG_CONTROLLER_THRESHOLD_FOR_VERTICAL_TABS
       (initial_move_ && !AreTabsConsecutive())) {
     TabStripModel* attached_model = attached_context_->GetTabStripModel();
     int to_index = attached_context_->GetInsertionIndexForDraggedBounds(
@@ -1201,6 +1204,7 @@ void TabDragController::MoveAttached(const gfx::Point& point_in_screen,
       // last_move_screen_loc_.
       if (index_of_last_item !=
           attached_model->GetIndexOfWebContents(last_contents)) {
+        BRAVE_UI_VIEWS_TABS_TAB_DRAG_CONTROLLER_UPDATE_LOC_FOR_VERTICAL_TABS
         last_move_screen_loc_ = point_in_screen.x();
       }
     }
@@ -1634,6 +1638,9 @@ gfx::Point TabDragController::GetAttachedDragPoint(
 
   gfx::Point tab_loc(point_in_screen);
   views::View::ConvertPointFromScreen(attached_context_->AsView(), &tab_loc);
+
+  BRAVE_UI_VIEWS_TABS_TAB_DRAG_CONTROLLER_ATTACHED_POINT_FOR_VERTICAL_TABS
+
   const int x = attached_context_->AsView()->GetMirroredXInView(tab_loc.x()) -
                 mouse_offset_.x();
 
